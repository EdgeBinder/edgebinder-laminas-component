name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          # ServiceManager 3.x only supports PSR-11 v1.0
          - php-version: '8.3'
            servicemanager-version: '3.0'
            psr-container-version: '1.0'
            dependencies: 'lowest'
          - php-version: '8.3'
            servicemanager-version: '3.0'
            psr-container-version: '1.0'
            dependencies: 'normal'
          - php-version: '8.4'
            servicemanager-version: '3.0'
            psr-container-version: '1.0'
            dependencies: 'normal'

          # ServiceManager 4.x supports PSR-11 v2.0
          - php-version: '8.3'
            servicemanager-version: '4.0'
            psr-container-version: '2.0'
            dependencies: 'normal'
          - php-version: '8.4'
            servicemanager-version: '4.0'
            psr-container-version: '2.0'
            dependencies: 'highest'

    name: PHP ${{ matrix.php-version }} - ServiceManager ${{ matrix.servicemanager-version }} - PSR-11 ${{ matrix.psr-container-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, pcre, spl, tokenizer, zip
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Set version constraints
      run: |
        if [[ "${{ matrix.servicemanager-version }}" == "3.0" ]]; then
          composer require "laminas/laminas-servicemanager:^3.0" --no-update
        else
          composer require "laminas/laminas-servicemanager:^4.0" --no-update
        fi

        if [[ "${{ matrix.psr-container-version }}" == "1.0" ]]; then
          composer require "psr/container:^1.0" --no-update
        else
          composer require "psr/container:^2.0" --no-update
        fi

    - name: Install dependencies
      run: |
        if [[ "${{ matrix.dependencies }}" == "lowest" ]]; then
          composer update --prefer-lowest --no-interaction --no-progress --prefer-dist
        elif [[ "${{ matrix.dependencies }}" == "highest" ]]; then
          composer update --no-interaction --no-progress --prefer-dist
        else
          composer update --no-interaction --no-progress --prefer-dist
        fi

    - name: Run unit tests
      run: composer run-script test-unit

    - name: Run integration tests
      run: composer run-script test-integration

    - name: Generate coverage report
      if: matrix.php-version == '8.3' && matrix.servicemanager-version == '4.0' && matrix.psr-container-version == '2.0'
      run: composer run-script test-coverage

    - name: Upload coverage reports to Codecov
      if: matrix.php-version == '8.3' && matrix.servicemanager-version == '4.0' && matrix.psr-container-version == '2.0'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Install dependencies
      run: composer install --no-interaction --no-progress --prefer-dist

    - name: Run security audit
      run: composer run-script security-audit
